<?php

/* SensioDistributionBundle:Configurator:check.html.twig */
class __TwigTemplate_1c6cc99745bcd4192b6d0dc6064b2f6e517a70a61a59ae34a14f152f5c1ec591 extends Twig_Template
{
    public function __construct(Twig_Environment $env)
    {
        parent::__construct($env);

        $this->parent = $this->env->loadTemplate("SensioDistributionBundle::Configurator/layout.html.twig");

        $this->blocks = array(
            'content' => array($this, 'block_content'),
        );
    }

    protected function doGetParent(array $context)
    {
        return "SensioDistributionBundle::Configurator/layout.html.twig";
    }

    protected function doDisplay(array $context, array $blocks = array())
    {
        $this->parent->display($context, array_merge($this->blocks, $blocks));
    }

    // line 3
    public function block_content($context, array $blocks = array())
    {
        // line 4
        echo "    ";
        if (twig_length_filter($this->env, (isset($context["majors"]) ? $context["majors"] : $this->getContext($context, "majors")))) {
            // line 5
            echo "        <h1>Major Problems that need to be fixed now</h1>
        <p>
            We have detected <strong>";
            // line 7
            echo twig_escape_filter($this->env, twig_length_filter($this->env, (isset($context["majors"]) ? $context["majors"] : $this->getContext($context, "majors"))), "html", null, true);
            echo "</strong> major problems.
            You <em>must</em> fix them before continuing:
        </p>
        <ol>
            ";
            // line 11
            $context['_parent'] = (array) $context;
            $context['_seq'] = twig_ensure_traversable((isset($context["majors"]) ? $context["majors"] : $this->getContext($context, "majors")));
            foreach ($context['_seq'] as $context["_key"] => $context["message"]) {
                // line 12
                echo "                <li>";
                echo twig_escape_filter($this->env, (isset($context["message"]) ? $context["message"] : $this->getContext($context, "message")), "html", null, true);
                echo "</li>
            ";
            }
            $_parent = $context['_parent'];
            unset($context['_seq'], $context['_iterated'], $context['_key'], $context['message'], $context['_parent'], $context['loop']);
            $context = array_intersect_key($context, $_parent) + $_parent;
            // line 14
            echo "        </ol>
    ";
        }
        // line 16
        echo "
    ";
        // line 17
        if (twig_length_filter($this->env, (isset($context["minors"]) ? $context["minors"] : $this->getContext($context, "minors")))) {
            // line 18
            echo "        <h1>Some Recommendations</h1>

        <p>
            ";
            // line 21
            if (twig_length_filter($this->env, (isset($context["majors"]) ? $context["majors"] : $this->getContext($context, "majors")))) {
                // line 22
                echo "            Additionally, we
            ";
            } else {
                // line 24
                echo "            We
            ";
            }
            // line 26
            echo "            have detected some minor problems that we <em>recommend</em> you to fix to have a better Symfony
            experience:

            <ol>
                ";
            // line 30
            $context['_parent'] = (array) $context;
            $context['_seq'] = twig_ensure_traversable((isset($context["minors"]) ? $context["minors"] : $this->getContext($context, "minors")));
            foreach ($context['_seq'] as $context["_key"] => $context["message"]) {
                // line 31
                echo "                    <li>";
                echo twig_escape_filter($this->env, (isset($context["message"]) ? $context["message"] : $this->getContext($context, "message")), "html", null, true);
                echo "</li>
                ";
            }
            $_parent = $context['_parent'];
            unset($context['_seq'], $context['_iterated'], $context['_key'], $context['message'], $context['_parent'], $context['loop']);
            $context = array_intersect_key($context, $_parent) + $_parent;
            // line 33
            echo "            </ol>
        </p>

    ";
        }
        // line 37
        echo "
    ";
        // line 38
        if ((!twig_length_filter($this->env, (isset($context["majors"]) ? $context["majors"] : $this->getContext($context, "majors"))))) {
            // line 39
            echo "        <ul class=\"symfony_list\">
            <li><a href=\"";
            // line 40
            echo twig_escape_filter($this->env, (isset($context["url"]) ? $context["url"] : $this->getContext($context, "url")), "html", null, true);
            echo "\">Configure your Symfony Application online</a></li>
        </ul>
    ";
        }
    }

    public function getTemplateName()
    {
        return "SensioDistributionBundle:Configurator:check.html.twig";
    }

    public function isTraitable()
    {
        return false;
    }

    public function getDebugInfo()
    {
        return array (  806 => 488,  803 => 487,  792 => 485,  784 => 482,  771 => 481,  745 => 475,  742 => 474,  723 => 472,  706 => 471,  690 => 466,  675 => 462,  656 => 460,  645 => 458,  630 => 452,  621 => 449,  616 => 447,  597 => 442,  563 => 410,  523 => 404,  513 => 400,  363 => 153,  276 => 111,  345 => 147,  334 => 141,  255 => 101,  431 => 189,  348 => 121,  207 => 75,  303 => 106,  170 => 84,  390 => 150,  369 => 141,  364 => 139,  359 => 138,  328 => 139,  261 => 91,  155 => 47,  194 => 68,  275 => 105,  694 => 467,  685 => 406,  680 => 403,  678 => 463,  658 => 391,  647 => 382,  643 => 381,  633 => 377,  627 => 374,  617 => 367,  609 => 362,  599 => 355,  579 => 342,  567 => 337,  557 => 330,  550 => 326,  531 => 312,  526 => 310,  509 => 304,  504 => 302,  481 => 290,  466 => 280,  422 => 184,  420 => 249,  396 => 234,  835 => 271,  832 => 270,  827 => 265,  820 => 261,  814 => 258,  810 => 256,  808 => 255,  805 => 254,  799 => 252,  797 => 251,  794 => 250,  788 => 484,  786 => 247,  783 => 246,  777 => 244,  766 => 240,  764 => 239,  761 => 238,  754 => 192,  748 => 191,  739 => 188,  729 => 186,  726 => 185,  721 => 184,  718 => 183,  714 => 277,  712 => 270,  705 => 237,  701 => 236,  698 => 468,  692 => 232,  689 => 231,  687 => 230,  676 => 224,  671 => 222,  668 => 395,  651 => 214,  637 => 378,  631 => 211,  626 => 208,  620 => 206,  610 => 203,  607 => 202,  604 => 201,  586 => 200,  583 => 199,  581 => 345,  577 => 341,  575 => 195,  560 => 174,  529 => 158,  522 => 156,  511 => 152,  494 => 148,  485 => 145,  452 => 272,  436 => 131,  433 => 130,  424 => 254,  416 => 126,  399 => 161,  392 => 158,  389 => 160,  383 => 224,  380 => 158,  375 => 119,  331 => 140,  318 => 111,  267 => 101,  256 => 96,  237 => 86,  713 => 214,  707 => 267,  702 => 469,  696 => 206,  686 => 465,  681 => 203,  666 => 200,  663 => 393,  655 => 194,  652 => 193,  635 => 191,  618 => 448,  613 => 188,  608 => 187,  605 => 186,  592 => 351,  590 => 178,  585 => 347,  547 => 165,  530 => 168,  528 => 406,  525 => 405,  516 => 155,  512 => 159,  510 => 158,  498 => 134,  486 => 292,  483 => 129,  473 => 150,  465 => 147,  462 => 202,  446 => 197,  428 => 136,  403 => 157,  400 => 120,  388 => 117,  342 => 137,  339 => 100,  326 => 138,  324 => 113,  311 => 68,  307 => 287,  291 => 102,  191 => 67,  335 => 134,  321 => 135,  259 => 103,  569 => 180,  558 => 178,  554 => 177,  546 => 174,  541 => 163,  535 => 161,  527 => 165,  518 => 402,  514 => 306,  508 => 160,  505 => 151,  501 => 158,  496 => 156,  489 => 154,  484 => 152,  477 => 142,  471 => 149,  458 => 137,  455 => 131,  451 => 141,  448 => 123,  445 => 267,  429 => 188,  418 => 98,  414 => 127,  406 => 158,  385 => 95,  376 => 82,  373 => 156,  366 => 140,  356 => 330,  290 => 119,  279 => 104,  263 => 95,  226 => 84,  205 => 59,  352 => 135,  340 => 145,  332 => 116,  330 => 87,  320 => 127,  313 => 82,  302 => 125,  287 => 108,  280 => 131,  249 => 67,  223 => 58,  216 => 79,  188 => 90,  23 => 3,  12 => 34,  58 => 14,  358 => 151,  351 => 328,  338 => 119,  327 => 114,  319 => 90,  315 => 131,  299 => 112,  293 => 120,  289 => 113,  281 => 114,  277 => 100,  262 => 98,  251 => 101,  248 => 97,  148 => 64,  253 => 100,  233 => 87,  212 => 78,  198 => 69,  192 => 88,  185 => 74,  165 => 83,  113 => 40,  97 => 41,  167 => 71,  213 => 78,  239 => 83,  236 => 109,  124 => 31,  118 => 49,  76 => 28,  70 => 26,  184 => 63,  202 => 94,  195 => 68,  186 => 82,  114 => 71,  153 => 77,  20 => 1,  502 => 155,  492 => 295,  449 => 198,  442 => 350,  426 => 340,  405 => 325,  401 => 172,  377 => 115,  370 => 100,  357 => 123,  353 => 149,  346 => 196,  329 => 131,  286 => 112,  282 => 58,  274 => 110,  270 => 102,  34 => 5,  231 => 83,  200 => 72,  180 => 62,  174 => 65,  172 => 57,  129 => 57,  127 => 35,  110 => 38,  265 => 105,  245 => 173,  152 => 46,  1004 => 544,  998 => 448,  992 => 197,  986 => 121,  980 => 86,  973 => 24,  969 => 23,  964 => 21,  960 => 20,  956 => 19,  952 => 18,  948 => 17,  944 => 16,  940 => 15,  937 => 14,  933 => 12,  930 => 11,  870 => 10,  785 => 9,  779 => 6,  775 => 243,  772 => 242,  758 => 237,  756 => 544,  741 => 532,  734 => 187,  704 => 210,  682 => 464,  673 => 461,  657 => 216,  641 => 456,  632 => 449,  628 => 448,  625 => 450,  622 => 446,  612 => 204,  602 => 445,  596 => 181,  588 => 424,  574 => 413,  566 => 408,  538 => 319,  521 => 372,  497 => 149,  490 => 147,  482 => 144,  464 => 139,  441 => 196,  425 => 135,  394 => 168,  349 => 133,  325 => 129,  310 => 81,  301 => 111,  271 => 76,  242 => 113,  232 => 88,  210 => 77,  160 => 76,  146 => 49,  84 => 27,  65 => 17,  386 => 159,  378 => 157,  361 => 152,  354 => 329,  344 => 97,  333 => 280,  323 => 128,  316 => 121,  306 => 107,  304 => 174,  295 => 88,  292 => 135,  272 => 158,  260 => 124,  257 => 149,  250 => 93,  244 => 85,  234 => 80,  222 => 83,  218 => 29,  215 => 74,  211 => 81,  197 => 69,  175 => 58,  150 => 55,  126 => 42,  297 => 104,  266 => 95,  225 => 77,  181 => 65,  178 => 59,  137 => 46,  104 => 37,  90 => 37,  81 => 23,  77 => 25,  669 => 201,  664 => 470,  659 => 426,  654 => 389,  649 => 461,  644 => 423,  639 => 421,  634 => 420,  629 => 419,  624 => 418,  619 => 417,  614 => 416,  571 => 338,  568 => 183,  565 => 182,  562 => 426,  559 => 425,  556 => 169,  553 => 423,  551 => 174,  548 => 393,  545 => 407,  542 => 321,  539 => 171,  536 => 170,  533 => 169,  517 => 402,  507 => 157,  467 => 140,  463 => 357,  456 => 273,  443 => 261,  439 => 195,  432 => 338,  419 => 127,  415 => 180,  408 => 176,  395 => 159,  391 => 83,  371 => 156,  367 => 155,  347 => 102,  343 => 146,  336 => 126,  300 => 105,  296 => 121,  288 => 118,  284 => 106,  228 => 78,  206 => 71,  190 => 76,  161 => 63,  134 => 39,  100 => 36,  53 => 17,  480 => 143,  474 => 285,  469 => 158,  461 => 138,  457 => 153,  453 => 199,  444 => 149,  440 => 105,  437 => 147,  435 => 258,  430 => 137,  427 => 129,  423 => 128,  413 => 125,  409 => 124,  407 => 242,  402 => 289,  398 => 119,  393 => 126,  387 => 164,  384 => 147,  381 => 93,  379 => 83,  374 => 114,  368 => 340,  365 => 141,  362 => 114,  360 => 127,  355 => 150,  341 => 131,  337 => 76,  322 => 275,  314 => 99,  312 => 130,  309 => 288,  305 => 115,  298 => 120,  294 => 214,  285 => 84,  283 => 115,  278 => 98,  268 => 127,  264 => 72,  258 => 94,  252 => 88,  247 => 66,  241 => 93,  229 => 87,  220 => 81,  214 => 99,  177 => 61,  169 => 57,  140 => 28,  132 => 59,  128 => 49,  107 => 37,  61 => 23,  273 => 198,  269 => 107,  254 => 68,  243 => 92,  240 => 88,  238 => 139,  235 => 89,  230 => 106,  227 => 86,  224 => 81,  221 => 75,  219 => 101,  217 => 79,  208 => 76,  204 => 78,  179 => 66,  159 => 70,  143 => 51,  135 => 62,  119 => 40,  102 => 33,  71 => 23,  63 => 21,  59 => 22,  93 => 38,  88 => 30,  78 => 24,  38 => 7,  94 => 21,  89 => 30,  85 => 23,  68 => 12,  56 => 16,  87 => 33,  21 => 2,  26 => 3,  75 => 28,  67 => 18,  46 => 14,  27 => 7,  44 => 11,  31 => 4,  28 => 3,  201 => 72,  196 => 92,  183 => 87,  171 => 73,  166 => 54,  163 => 82,  158 => 80,  156 => 62,  151 => 45,  142 => 61,  138 => 56,  136 => 71,  121 => 50,  117 => 39,  105 => 25,  91 => 34,  62 => 16,  49 => 12,  24 => 2,  25 => 35,  19 => 1,  79 => 29,  72 => 21,  69 => 26,  47 => 15,  40 => 11,  37 => 7,  22 => 2,  246 => 136,  157 => 41,  145 => 74,  139 => 49,  131 => 45,  123 => 61,  120 => 31,  115 => 40,  111 => 47,  108 => 47,  101 => 33,  98 => 34,  96 => 35,  83 => 30,  74 => 22,  66 => 25,  55 => 38,  52 => 12,  50 => 16,  43 => 12,  41 => 19,  35 => 5,  32 => 6,  29 => 3,  209 => 96,  203 => 73,  199 => 93,  193 => 177,  189 => 66,  187 => 75,  182 => 87,  176 => 86,  173 => 85,  168 => 61,  164 => 70,  162 => 59,  154 => 67,  149 => 50,  147 => 75,  144 => 42,  141 => 73,  133 => 49,  130 => 46,  125 => 42,  122 => 41,  116 => 57,  112 => 39,  109 => 52,  106 => 51,  103 => 46,  99 => 23,  95 => 39,  92 => 31,  86 => 33,  82 => 26,  80 => 29,  73 => 23,  64 => 24,  60 => 20,  57 => 19,  54 => 19,  51 => 37,  48 => 16,  45 => 11,  42 => 8,  39 => 10,  36 => 9,  33 => 6,  30 => 7,);
    }
}
